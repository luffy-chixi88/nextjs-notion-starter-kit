diff --git a/node_modules/react-notion-x/.DS_Store b/node_modules/react-notion-x/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-notion-x/build/index.d.ts b/node_modules/react-notion-x/build/index.d.ts
index 9caf1c9..b158795 100644
--- a/node_modules/react-notion-x/build/index.d.ts
+++ b/node_modules/react-notion-x/build/index.d.ts
@@ -1,4 +1,4 @@
-export { NotionRenderer } from './renderer';
+export { NotionRenderer, NotionBlockRenderer } from './renderer';
 export * from './types';
 export * from './utils';
 export * from './context';
diff --git a/node_modules/react-notion-x/build/index.js b/node_modules/react-notion-x/build/index.js
index a18bcfd..5f5e5df 100644
--- a/node_modules/react-notion-x/build/index.js
+++ b/node_modules/react-notion-x/build/index.js
@@ -1720,8 +1720,8 @@ var Asset = ({ block, zoomable = true, children }) => {
       source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
-    const alt = caption || "notion image";
+    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.alt_text);
+    const alt = caption || "passto image";
     content = /* @__PURE__ */ React19.createElement(LazyImage, {
       src,
       alt,
@@ -2410,7 +2410,8 @@ var Block = (props) => {
       if (components.Callout) {
         return /* @__PURE__ */ React28.createElement(components.Callout, {
           block,
-          className: blockId
+          className: blockId,
+          children
         });
       } else {
         return /* @__PURE__ */ React28.createElement("div", {
@@ -2738,6 +2739,7 @@ function getMediumZoomMargin() {
   }
 }
 export {
+  NotionBlockRenderer,
   Breadcrumbs,
   Header,
   NotionContextConsumer,
